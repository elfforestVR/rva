{"$message_type":"diagnostic","message":"patterns aren't allowed in functions without bodies","code":{"code":"E0642","explanation":"Trait methods currently cannot take patterns as arguments.\n\nErroneous code example:\n\n```compile_fail,E0642\ntrait Foo {\n    fn foo((x, y): (i32, i32)); // error: patterns aren't allowed\n                                //        in trait methods\n}\n```\n\nYou can instead use a single name for the argument:\n\n```\ntrait Foo {\n    fn foo(x_and_y: (i32, i32)); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs","byte_start":6918,"byte_end":6925,"line_start":147,"line_end":147,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"                                            &f_name: &str,","highlight_start":45,"highlight_end":52}],"label":"pattern not allowed in function without body","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0642]\u001b[0m\u001b[0m\u001b[1m: patterns aren't allowed in functions without bodies\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs:147:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   &f_name: &str,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mpattern not allowed in function without body\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the parameter type `T` may not live long enough","code":{"code":"E0310","explanation":"A parameter type is missing a lifetime constraint or has a lifetime that\ndoes not live long enough.\n\nErroneous code example:\n\n```compile_fail,E0310\n// This won't compile because T is not constrained to the static lifetime\n// the reference needs\nstruct Foo<T> {\n    foo: &'static T\n}\n```\n\nType parameters in type definitions have lifetimes associated with them that\nrepresent how long the data stored within them is guaranteed to live. This\nlifetime must be as long as the data needs to be alive, and missing the\nconstraint that denotes this will cause this error.\n\nThis will compile, because it has the constraint on the type parameter:\n\n```\nstruct Foo<T: 'static> {\n    foo: &'static T\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs","byte_start":14990,"byte_end":15059,"line_start":454,"line_end":454,"column_start":5,"column_end":74,"is_primary":true,"text":[{"text":"    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {","highlight_start":5,"highlight_end":74}],"label":"the parameter type `T` must be valid for the static lifetime...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs","byte_start":14990,"byte_end":15059,"line_start":454,"line_end":454,"column_start":5,"column_end":74,"is_primary":true,"text":[{"text":"    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {","highlight_start":5,"highlight_end":74}],"label":"...so that the type `T` will meet its required lifetime bounds...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...that is required by this bound","code":null,"level":"note","spans":[{"file_name":"/home/elf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs","byte_start":5369,"byte_end":5371,"line_start":180,"line_end":180,"column_start":30,"column_end":32,"is_primary":true,"text":[{"text":"pub enum Cow<'a, B: ?Sized + 'a>","highlight_start":30,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit lifetime bound","code":null,"level":"help","spans":[{"file_name":"/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs","byte_start":14901,"byte_end":14901,"line_start":450,"line_end":450,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"impl<'a, T: ?Sized> Decodable for Cow<'a, T>","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":" + 'static","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0310]\u001b[0m\u001b[0m\u001b[1m: the parameter type `T` may not live long enough\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/elf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.19/src/serialize.rs:454:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe parameter type `T` must be valid for the static lifetime...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...so that the type `T` will meet its required lifetime bounds...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: ...that is required by this bound\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/elf/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/borrow.rs:180:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Cow<'a, B: ?Sized + 'a>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding an explicit lifetime bound\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<'a, T: ?Sized\u001b[0m\u001b[0m\u001b[38;5;10m + 'static\u001b[0m\u001b[0m> Decodable for Cow<'a, T>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0310, E0642.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0310, E0642.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0310`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0310`.\u001b[0m\n"}
